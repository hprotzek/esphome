esphome:
  name: grube

esp32:
  board: lolin32 
  framework:
    type: arduino

logger:
  level: INFO

# Enable Home Assistant API
api:
  password: ""

ota:
  password: ""

wifi:
  ssid: !secret wifi_ssid_garten
  password: !secret wifi_password_garten
  fast_connect: false
  reboot_timeout: 5min
  manual_ip:
    static_ip: !secret grube_static_ip
    gateway: !secret grube_gateway
    subnet: !secret grube_subnet
    dns1: !secret grube_dns1
  ap:
    ssid: "Grube Fallback Hotspot"
    password: !secret wifi_fallback_password

captive_portal:

i2c:
  sda: 21
  scl: 22
  scan: false 
  id: bus_a

globals:
   - id: level_counter 
     type: int
     restore_value: no
     initial_value: '0'
   - id: temperature_counter
     type: int
     restore_value: no
     initial_value: '0'
   - id: humidity_counter
     type: int
     restore_value: no
     initial_value: '0'
   - id: ota_mode
     type: int
     restore_value: no
     initial_value: '0'

switch:
  - platform: gpio
    pin: 13
    restore_mode: ALWAYS_ON
    name: "Grube Ultrasonic Sensor"

sensor:
  - platform: ultrasonic
    trigger_pin: 16
    echo_pin: 4
    name: "Grube Level"
    update_interval: 1s
    pulse_time: 10us
    timeout: 4m
    filters:
       - filter_out: nan
       - median:
           window_size: 5
           send_every: 3
           send_first_at: 3
  - platform: bme280
    temperature:
      name: "Grube Temperature"
    humidity:
      name: "Grube Humidity"
    address: 0x76
    update_interval: 1s
  - platform: wifi_signal
    name: "Grube WiFi Signal"
    update_interval: 60s

web_server:
  port: 80

#mqtt:
#  broker: !secret mqtt_broker_garten
#  username: !secret mqtt_user_garten
#  password: !secret mqtt_password_garten
#  birth_message:
#  will_message:
#  on_message:
#    - topic: grube/ota_mode
#      payload: 'ON'
#      then:
#        - lambda: |-
#            id(ota_mode) = 1;
#        - deep_sleep.prevent: deep_sleep_1
#    - topic: grube/sleep_mode
#      payload: 'ON'
#      then:
#        - deep_sleep.enter: deep_sleep_1
#    - topic: grube/sensor/grube_level/state
#      then:
#        - lambda: |-
#            id(level_counter) += 1;
#            if ((id(ota_mode) == 0) && (id(level_counter) >= 1) && (id(temperature_counter) >= 1) && (id(humidity_counter) >= 1)) {
#              id(deep_sleep_1).begin_sleep();
#            }
#    - topic: grube/sensor/grube_temperature/state
#      then:
#        - lambda: |-
#            id(temperature_counter) += 1;
#            if ((id(ota_mode) == 0) && (id(level_counter) >= 1) && (id(temperature_counter) >= 1) && (id(humidity_counter) >= 1)) {
#              id(deep_sleep_1).begin_sleep();
#            }
#    - topic: grube/sensor/grube_humidity/state
#      then:
#        - lambda: |-
#            id(humidity_counter) += 1;
#            if ((id(ota_mode) == 0) && (id(level_counter) >= 1) && (id(temperature_counter) >= 1) && (id(humidity_counter) >= 1)) {
#              id(deep_sleep_1).begin_sleep();
#            }

#deep_sleep:
#  run_duration: 60min
#  sleep_duration: 10min
#  id: deep_sleep_1
